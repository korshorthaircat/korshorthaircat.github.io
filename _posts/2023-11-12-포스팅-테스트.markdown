---
layout: post
title:  "포스팅-테스트"
date:   2023-11-12 12:24:00
categories: memo
tags: markdown blog
mathjax: true
---

You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

```ruby
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
```

Check out the [Jekyll docs][jekyll] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll’s dedicated Help repository][jekyll-help].

[jekyll]:      http://jekyllrb.com
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-help]: https://github.com/jekyll/jekyll-help

Block Mathjax 

$$
f(x) = ax + b
$$

Inline Mathjax $a \neq b$

# H1 입니다.
안녕하세요. 안녕하세요. 안녕하세요. 안녕하세요. 안녕하세요.
* 불렛 테스트
    * 불렛 들여쓰기
    * 불렛 들여쓰기
        * 불렛 들여쓰기
        * 불렛 들여쓰기
## H2 입니다.
> 인용...
>
> 인용...
>
> 인용...
- - -
줄 나눔
- - -
### H3 입니다.
```java
// 코드 블록 확인
public class PlainTextPasswordEncoder implements PasswordEncoder {
    @Override
    public String encode(CharSequence rawPassword) {
        return rawPassword.toString();
    }
}
```
* `PasswordEncoder`는 PasswordEncoder

#### H4 입니다.
##### H5 입니다.
